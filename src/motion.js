import {
  motionNotificationsEnabled,
  lastMotionTime,
  setLastMotionTime,
} from './state.js';
import {
  captureFrameBuffer,
  captureVideoBuffer,
  broadcastMotionAlert,
  broadcastMotionVideo,
} from './camera.js';

let lastAlertTime = 0;

// === 60 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ ===
const minAlertInterval = 60000;

// === –§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è ===
export async function handleMotionDetected(bot, rtspUrl) {
  if (!motionNotificationsEnabled) {
    return;
  }

  const now = Date.now();
  if (now - lastAlertTime < minAlertInterval) {
    console.log('‚è≥ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏–∑-–∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞');
    return;
  }

  console.log('üé• –î–≤–∏–∂–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ! –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–∏—Å—å –≤–∏–¥–µ–æ...');
  lastAlertTime = now;
  setLastMotionTime(new Date().toLocaleString());

  try {
    const imageBuffer = await captureFrameBuffer(rtspUrl);
    const photoCaption = `üì∏ –î–≤–∏–∂–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ\n‚è∞ ${lastMotionTime}`;
    await broadcastMotionAlert(bot, imageBuffer, photoCaption);

    const videoBuffer = await captureVideoBuffer(rtspUrl);
    const videoCaption = `üé• –í–∏–¥–µ–æ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏\n‚è∞ ${lastMotionTime}`;
    await broadcastMotionVideo(bot, videoBuffer, videoCaption);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–≤–∏–∂–µ–Ω–∏—è:', err.message || err);
  }
}
